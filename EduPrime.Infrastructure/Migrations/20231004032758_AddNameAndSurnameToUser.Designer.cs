// <auto-generated />
using System;
using EduPrime.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduPrime.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231004032758_AddNameAndSurnameToUser")]
    partial class AddNameAndSurnameToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AreaEmployee", b =>
                {
                    b.Property<int>("AreasId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.HasKey("AreasId", "EmployeesId");

                    b.HasIndex("EmployeesId");

                    b.ToTable("AreaEmployee");

                    b.HasData(
                        new
                        {
                            AreasId = 1,
                            EmployeesId = 1
                        },
                        new
                        {
                            AreasId = 1,
                            EmployeesId = 2
                        },
                        new
                        {
                            AreasId = 1,
                            EmployeesId = 4
                        },
                        new
                        {
                            AreasId = 1,
                            EmployeesId = 5
                        },
                        new
                        {
                            AreasId = 1,
                            EmployeesId = 6
                        },
                        new
                        {
                            AreasId = 1,
                            EmployeesId = 3
                        },
                        new
                        {
                            AreasId = 2,
                            EmployeesId = 2
                        },
                        new
                        {
                            AreasId = 2,
                            EmployeesId = 3
                        },
                        new
                        {
                            AreasId = 3,
                            EmployeesId = 7
                        },
                        new
                        {
                            AreasId = 3,
                            EmployeesId = 8
                        },
                        new
                        {
                            AreasId = 4,
                            EmployeesId = 9
                        });
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 3, 21, 27, 58, 620, DateTimeKind.Local).AddTicks(1894));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4450),
                            Description = "Only those who teach a subject",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4453),
                            Description = "Office administrative area",
                            Name = "Office administrative"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4454),
                            Description = "School clean service",
                            Name = "Clean service"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4455),
                            Description = "School security guard",
                            Name = "Security guard"
                        });
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 3, 21, 27, 58, 620, DateTimeKind.Local).AddTicks(5757));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PictureURL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("RfcDocument")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1988, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4727),
                            Email = "BrendaLopez@school.com",
                            Name = "Brenda",
                            PhoneNumber = "8445678787",
                            Surname = "Lopez Reyes"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1980, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4731),
                            Email = "AlmaRosa@school.com",
                            Name = "Alma Rosa",
                            PhoneNumber = "8445567556",
                            Surname = "Aguilar Tejada"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1990, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4733),
                            Email = "LorenaSuarez@school.com",
                            Name = "Lorena",
                            PhoneNumber = "8445552552",
                            Surname = "Suarez Treviño"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1985, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4735),
                            Email = "RamiroTorrero@school.com",
                            Name = "Ramiro",
                            PhoneNumber = "8449883834",
                            Surname = "Torrero Salinas"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1990, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4737),
                            Email = "MarisolTorres@school.com",
                            Name = "Marisol",
                            PhoneNumber = "8445556781",
                            Surname = "Torres Valdés"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1980, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4739),
                            Email = "SofiaCardenas@school.com",
                            Name = "Sofía",
                            PhoneNumber = "8445556781",
                            Surname = "Cárdenas Berrendo"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(1981, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4745),
                            Email = "ReginaGonzales@school.com",
                            Name = "Regina",
                            PhoneNumber = "8446787575",
                            Surname = "Gonzales Perreira"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(1975, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4747),
                            Email = "VeronicaZertuche@school.com",
                            Name = "Verónica",
                            PhoneNumber = "8449990023",
                            Surname = "Zertuche Mora"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(1975, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4749),
                            Email = "LuisCarranza@school.com",
                            Name = "Luis",
                            PhoneNumber = "8445678787",
                            Surname = "Carranza Allende"
                        });
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 3, 21, 27, 58, 621, DateTimeKind.Local).AddTicks(3418));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Satisfaction")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearsOnDuty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Professors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4908),
                            EmployeeId = 1,
                            Satisfaction = 85,
                            YearsOnDuty = 5
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4910),
                            EmployeeId = 2,
                            Satisfaction = 90,
                            YearsOnDuty = 30
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4912),
                            EmployeeId = 3,
                            Satisfaction = 90,
                            YearsOnDuty = 15
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4913),
                            EmployeeId = 4,
                            Satisfaction = 100,
                            YearsOnDuty = 10
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4915),
                            EmployeeId = 5,
                            Satisfaction = 45,
                            YearsOnDuty = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4916),
                            EmployeeId = 6,
                            Satisfaction = 100,
                            YearsOnDuty = 10
                        });
                });

            modelBuilder.Entity("EduPrime.Core.Entities.ProfessorSubject", b =>
                {
                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("ProfessorId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ProfessorsSubjects");

                    b.HasData(
                        new
                        {
                            ProfessorId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            ProfessorId = 2,
                            SubjectId = 4
                        },
                        new
                        {
                            ProfessorId = 3,
                            SubjectId = 1
                        },
                        new
                        {
                            ProfessorId = 3,
                            SubjectId = 7
                        },
                        new
                        {
                            ProfessorId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            ProfessorId = 1,
                            SubjectId = 5
                        },
                        new
                        {
                            ProfessorId = 4,
                            SubjectId = 6
                        },
                        new
                        {
                            ProfessorId = 5,
                            SubjectId = 3
                        },
                        new
                        {
                            ProfessorId = 5,
                            SubjectId = 10
                        },
                        new
                        {
                            ProfessorId = 6,
                            SubjectId = 9
                        },
                        new
                        {
                            ProfessorId = 6,
                            SubjectId = 12
                        });
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 3, 21, 27, 58, 622, DateTimeKind.Local).AddTicks(5692));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5301),
                            Name = "PrimaryRole"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5303),
                            Name = "AdminRole"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5304),
                            Name = "StandardRole"
                        });
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 3, 21, 27, 58, 622, DateTimeKind.Local).AddTicks(9001));

                    b.Property<int>("CurrentSemester")
                        .HasColumnType("int");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PictureURL")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2000, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5030),
                            CurrentSemester = 1,
                            EmergencyContact = "8445677676",
                            Name = "Emiliano",
                            PhoneNumber = "8445556767",
                            Surname = "Romero Salínas"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2000, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5032),
                            CurrentSemester = 1,
                            EmergencyContact = "8445677676",
                            Name = "Omar",
                            PhoneNumber = "8445556767",
                            Surname = "Martínez Reyes"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2000, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5034),
                            CurrentSemester = 1,
                            EmergencyContact = "8445677676",
                            Name = "Verónica",
                            PhoneNumber = "8446789900",
                            Surname = "Sánchez"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1999, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5037),
                            CurrentSemester = 2,
                            EmergencyContact = "8445677676",
                            Name = "Jimena",
                            PhoneNumber = "8442225656",
                            Surname = "Trejo González"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1999, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5039),
                            CurrentSemester = 2,
                            EmergencyContact = "8445677676",
                            Name = "Daniel",
                            PhoneNumber = "8442225656",
                            Surname = "Aranda Martín"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1999, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5041),
                            CurrentSemester = 2,
                            EmergencyContact = "8445677676",
                            Name = "Valeria",
                            PhoneNumber = "8445556776",
                            Surname = "Guzmán Allende"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(1998, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5043),
                            CurrentSemester = 3,
                            EmergencyContact = "8445677676",
                            Name = "Julian",
                            PhoneNumber = "8445676767",
                            Surname = "Torres Cabrera"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(1998, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5045),
                            CurrentSemester = 3,
                            EmergencyContact = "8445677676",
                            Name = "Juan",
                            PhoneNumber = "8445676767",
                            Surname = "Aguilar Cabello"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(1998, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5047),
                            CurrentSemester = 3,
                            EmergencyContact = "8445677676",
                            Name = "Gabriela",
                            PhoneNumber = "8445676767",
                            Surname = "Agustín Neida"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(1997, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5050),
                            CurrentSemester = 4,
                            EmergencyContact = "8445677676",
                            Name = "Pedro",
                            PhoneNumber = "8445676767",
                            Surname = "Ignácio Carranza"
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(1997, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5052),
                            CurrentSemester = 4,
                            EmergencyContact = "8445677676",
                            Name = "Amanda",
                            PhoneNumber = "8445582019",
                            Surname = "Treviño Almeda"
                        },
                        new
                        {
                            Id = 12,
                            BirthDate = new DateTime(1997, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5057),
                            CurrentSemester = 4,
                            EmergencyContact = "8445677676",
                            Name = "Jessica",
                            PhoneNumber = "8445582019",
                            Surname = "Ramos Irigoyen"
                        });
                });

            modelBuilder.Entity("EduPrime.Core.Entities.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinalGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("FirstGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SecondGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentsSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 1,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5197),
                            FinalGrade = 0,
                            FirstGrade = 91,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5199),
                            FinalGrade = 0,
                            FirstGrade = 71,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 1,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5201),
                            FinalGrade = 0,
                            FirstGrade = 80,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 2,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5203),
                            FinalGrade = 0,
                            FirstGrade = 90,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 2,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5205),
                            FinalGrade = 0,
                            FirstGrade = 50,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 2,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5209),
                            FinalGrade = 0,
                            FirstGrade = 80,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 3,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5211),
                            FinalGrade = 0,
                            FirstGrade = 90,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 3,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5213),
                            FinalGrade = 0,
                            FirstGrade = 50,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 3,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5215),
                            FinalGrade = 0,
                            FirstGrade = 80,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 4,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5217),
                            FinalGrade = 0,
                            FirstGrade = 90,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 4,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5218),
                            FinalGrade = 0,
                            FirstGrade = 50,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 4,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5220),
                            FinalGrade = 0,
                            FirstGrade = 80,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 5,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5222),
                            FinalGrade = 0,
                            FirstGrade = 90,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 5,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5224),
                            FinalGrade = 0,
                            FirstGrade = 50,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 5,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5225),
                            FinalGrade = 0,
                            FirstGrade = 80,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 6,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5227),
                            FinalGrade = 0,
                            FirstGrade = 85,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 6,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5229),
                            FinalGrade = 0,
                            FirstGrade = 100,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 6,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5231),
                            FinalGrade = 0,
                            FirstGrade = 95,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 7,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5233),
                            FinalGrade = 0,
                            FirstGrade = 85,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 8,
                            SubjectId = 7,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5234),
                            FinalGrade = 0,
                            FirstGrade = 100,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 9,
                            SubjectId = 7,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5236),
                            FinalGrade = 0,
                            FirstGrade = 95,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 8,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5238),
                            FinalGrade = 0,
                            FirstGrade = 90,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 8,
                            SubjectId = 8,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5240),
                            FinalGrade = 0,
                            FirstGrade = 87,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 9,
                            SubjectId = 8,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5242),
                            FinalGrade = 0,
                            FirstGrade = 65,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 9,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5244),
                            FinalGrade = 0,
                            FirstGrade = 100,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 8,
                            SubjectId = 9,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5246),
                            FinalGrade = 0,
                            FirstGrade = 80,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 9,
                            SubjectId = 9,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5247),
                            FinalGrade = 0,
                            FirstGrade = 90,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 10,
                            SubjectId = 10,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5249),
                            FinalGrade = 0,
                            FirstGrade = 50,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 11,
                            SubjectId = 10,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5251),
                            FinalGrade = 0,
                            FirstGrade = 70,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 12,
                            SubjectId = 10,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5253),
                            FinalGrade = 0,
                            FirstGrade = 100,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 10,
                            SubjectId = 11,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5254),
                            FinalGrade = 0,
                            FirstGrade = 50,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 11,
                            SubjectId = 11,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5256),
                            FinalGrade = 0,
                            FirstGrade = 70,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 12,
                            SubjectId = 11,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5258),
                            FinalGrade = 0,
                            FirstGrade = 100,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 10,
                            SubjectId = 12,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5260),
                            FinalGrade = 0,
                            FirstGrade = 50,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 11,
                            SubjectId = 12,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5261),
                            FinalGrade = 0,
                            FirstGrade = 70,
                            SecondGrade = 0,
                            Status = 0
                        },
                        new
                        {
                            StudentId = 12,
                            SubjectId = 12,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(5263),
                            FinalGrade = 0,
                            FirstGrade = 100,
                            SecondGrade = 0,
                            Status = 0
                        });
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableSemester")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(140));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableSemester = 1,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4947),
                            Name = "Matemáticas I"
                        },
                        new
                        {
                            Id = 4,
                            AvailableSemester = 2,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4951),
                            Name = "Matemáticas II"
                        },
                        new
                        {
                            Id = 7,
                            AvailableSemester = 3,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4955),
                            Name = "Matemáticas III"
                        },
                        new
                        {
                            Id = 2,
                            AvailableSemester = 1,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4949),
                            Name = "Física I"
                        },
                        new
                        {
                            Id = 5,
                            AvailableSemester = 2,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4953),
                            Name = "Física II"
                        },
                        new
                        {
                            Id = 8,
                            AvailableSemester = 3,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4957),
                            Name = "Física III"
                        },
                        new
                        {
                            Id = 3,
                            AvailableSemester = 1,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4950),
                            Name = "Historia"
                        },
                        new
                        {
                            Id = 6,
                            AvailableSemester = 2,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4954),
                            Name = "Finanzas"
                        },
                        new
                        {
                            Id = 9,
                            AvailableSemester = 3,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4958),
                            Name = "Química I"
                        },
                        new
                        {
                            Id = 10,
                            AvailableSemester = 4,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4959),
                            Name = "Filosofía"
                        },
                        new
                        {
                            Id = 11,
                            AvailableSemester = 4,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4960),
                            Name = "Informática"
                        },
                        new
                        {
                            Id = 12,
                            AvailableSemester = 4,
                            CreatedOn = new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(4962),
                            Name = "Química II"
                        });
                });

            modelBuilder.Entity("EduPrime.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 10, 3, 21, 27, 58, 624, DateTimeKind.Local).AddTicks(3741));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AreaEmployee", b =>
                {
                    b.HasOne("EduPrime.Core.Entities.Area", null)
                        .WithMany()
                        .HasForeignKey("AreasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduPrime.Core.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Professor", b =>
                {
                    b.HasOne("EduPrime.Core.Entities.Employee", "Employee")
                        .WithOne("Professor")
                        .HasForeignKey("EduPrime.Core.Entities.Professor", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EduPrime.Core.Entities.ProfessorSubject", b =>
                {
                    b.HasOne("EduPrime.Core.Entities.Professor", "Professor")
                        .WithMany("ProfessorsSubjects")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduPrime.Core.Entities.Subject", "Subject")
                        .WithMany("ProfessorsSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EduPrime.Core.Entities.StudentSubject", b =>
                {
                    b.HasOne("EduPrime.Core.Entities.Student", "Student")
                        .WithMany("StudentsSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduPrime.Core.Entities.Subject", "Subject")
                        .WithMany("StudentsSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EduPrime.Core.Entities.User", b =>
                {
                    b.HasOne("EduPrime.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Employee", b =>
                {
                    b.Navigation("Professor");
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Professor", b =>
                {
                    b.Navigation("ProfessorsSubjects");
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Student", b =>
                {
                    b.Navigation("StudentsSubjects");
                });

            modelBuilder.Entity("EduPrime.Core.Entities.Subject", b =>
                {
                    b.Navigation("ProfessorsSubjects");

                    b.Navigation("StudentsSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
